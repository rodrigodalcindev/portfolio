/// Highlighter effect mixin
@mixin highlighter
  @include transition(background 0.35s ease-out)
  background-image: linear-gradient(to right, rgba(255,255,255,0) 50%, $smoke-white 50%)
  background-position: -0% 0
  background-size: 205% auto

  &:hover
    background-position: -99.99% 0
    background-size: 200% auto

    a
      color: $black
      cursor: pointer

  a
    @include transition(color 0.35s ease-out)
    color: $smoke-white
    display: inline-block
    padding: 0 $b-space-xxs

  &.inverted
    background-image: linear-gradient(to right, rgba(0,0,0,0) 50%, $black-olive 50%)

    a
      color: $black

    &:hover
      a
        color: $smoke-white

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint)
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint)
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))}
      @content
  @else
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Available breakpoints are: #{map-keys($breakpoints)}."